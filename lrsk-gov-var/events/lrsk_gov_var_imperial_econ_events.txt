# Government Variety Pack
# Events - Imperial Economy
# Author: littleraskol

namespace = lrsk_gov_var_impecon

# Whenever a country becomes a subject, determine if charter choice should be given to overlord
# This = subject
# From = subject's overlord
country_event = {
	id = lrsk_gov_var_impecon.1

  	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			has_valid_civic = lrsk_gov_var_civic_imperial_economy
		}
		lrsk_special_vassal_allowed = yes
	}

	immediate = {
		log = "In Imperial Economy special vassals pre-choice event. Overlord = [from.GetName], subject = [this.GetName]"

		# check and see if there should already be an applied type somehow; apply it.
		if = { limit = { has_country_flag = lrsk_gvp_impecon_specsub_of@from }
			switch = {
				trigger = has_country_flag
				lrsk_gvp_impecon_alloysub_of@from = { 
					set_subject_of = {
						who = from
						preset = preset_lrsk_gvp_vassal_foundry
					}
				}
				lrsk_gvp_impecon_tradesub_of@from = {
					set_subject_of = {
						who = from
						preset = preset_lrsk_gvp_vassal_market
					}
				}
				lrsk_gvp_impecon_trophysub_of@from = {
					set_subject_of = {
						who = from
						preset = preset_lrsk_gvp_vassal_trophy
					}
				}
				lrsk_gvp_impecon_raressub_of@from = {
					set_subject_of = {
						who = from
						preset = preset_lrsk_gvp_vassal_prospector
					}
				}
				default = {
					set_timed_country_flag = {
						flag = lrsk_impecon_temp_no_flag
						days = 6
					}
					# This should never happen, but if there's no type flag, ask player what to do
					from = { country_event = { id = lrsk_gov_var_impecon.2 days = 3 } } # delayed to help play nice with vassal mods.
				}
			}

			# recalcs if needed
			if = { limit = { NOT = { has_country_flag = lrsk_impecon_temp_no_flag } } country_event = { id = lrsk_gov_var_impecon.3 } }
		}
		else = {
			from = { country_event = { id = lrsk_gov_var_impecon.2 days = 3 } } # delayed to help play nice with vassal mods.
		}
	}
}

country_event = {
	id = lrsk_gov_var_impecon.2
	title = lrsk_gov_var_impecon.2.name
	desc  = lrsk_gov_var_impecon.2.desc
	picture = GFX_evt_partition
	location = from
	is_triggered_only = yes

	trigger = {
		has_valid_civic = lrsk_gov_var_civic_imperial_economy	# JIC
	}

	immediate = {
		save_event_target_as = lrsk_impecon_colonizer
		from = { save_event_target_as = lrsk_impecon_colonized }
		log = "In Imperial Economy special vassals choice event. Overlord = [lrsk_impecon_colonizer.GetName], subject = [lrsk_impecon_colonized.GetName]"
	}

	# Foundry
	option = {
		name = lrsk_gov_var_impecon.2.a
		custom_tooltip = lrsk_gov_var_impecon.2.a.tooltip
		
		hidden_effect = {
			event_target:lrsk_impecon_colonized = {
				set_subject_of = {
					who = event_target:lrsk_impecon_colonizer
					preset = preset_lrsk_gvp_vassal_foundry
				}
				set_country_flag = lrsk_gvp_impecon_specsub_of@root
				set_country_flag = lrsk_gvp_impecon_alloysub_of@root
			}
			log = "[lrsk_impecon_colonized.GetName] set to Foundry Colony under [lrsk_impecon_colonizer.GetName]"
		}
		
		ai_chance = {
			factor = 10 # dunno
			modifier = {
				factor = 2
				has_ethic = ethic_militarist
			}
			modifier = {
				factor = 3
				has_ethic = ethic_fanatic_militarist
			}
			modifier = {
				factor = 0.6
				has_ethic = ethic_pacifist
			}
			modifier = {
				factor = 0.3
				has_ethic = ethic_fanatic_pacifist
			}
		}
	}

	# Market
	option = {
		name = lrsk_gov_var_impecon.2.b
		custom_tooltip = lrsk_gov_var_impecon.2.b.tooltip
		
		hidden_effect = {
			event_target:lrsk_impecon_colonized = {
				set_subject_of = {
					who = event_target:lrsk_impecon_colonizer
					preset = preset_lrsk_gvp_vassal_market
				}
				set_country_flag = lrsk_gvp_impecon_specsub_of@root
				set_country_flag = lrsk_gvp_impecon_tradesub_of@root
			}
			add_modifier = { modifier = lrsk_gov_var_empire_impecon_market }
			log = "[lrsk_impecon_colonized.GetName] set to Market Colony under [lrsk_impecon_colonizer.GetName]"
		}
		
		ai_chance = {
			factor = 10 # dunno
			modifier = {
				factor = 2
				has_ethic = ethic_pacifist
			}
			modifier = {
				factor = 3
				has_ethic = ethic_fanatic_pacifist
			}
			modifier = {
				factor = 0.6
				has_ethic = ethic_militarist
			}
			modifier = {
				factor = 0.3
				has_ethic = ethic_fanatic_militarist
			}
		}
	}

	# Trophy
	option = {
		name = lrsk_gov_var_impecon.2.c
		custom_tooltip = lrsk_gov_var_impecon.2.c.tooltip

		allow = {
			custom_tooltip = {
				fail_text = preset_lrsk_gvp_vassal_trophy_no_gestalt
				event_target:lrsk_impecon_colonized = { is_gestalt = no }
			}
		}
		
		hidden_effect = {
			event_target:lrsk_impecon_colonized = {
				set_subject_of = {
					who = event_target:lrsk_impecon_colonizer
					preset = preset_lrsk_gvp_vassal_trophy
				}
				set_country_flag = lrsk_gvp_impecon_specsub_of@root
				set_country_flag = lrsk_gvp_impecon_trophysub_of@root
				add_modifier = { modifier = lrsk_gov_var_empire_impecon_trophy_vs }
			}
			add_modifier = { modifier = lrsk_gov_var_empire_impecon_trophy_ol }
			log = "[lrsk_impecon_colonized.GetName] set to Trophy Colony under [lrsk_impecon_colonizer.GetName]"
		}
		
		ai_chance = {
			factor = 10 # dunno
			modifier = {
				factor = 2
				has_ethic = ethic_xenophobe
			}
			modifier = {
				factor = 3
				has_ethic = ethic_fanatic_xenophobe
			}
			modifier = {
				factor = 2
				has_ethic = ethic_authoritarian
			}
			modifier = {
				factor = 3
				has_ethic = ethic_fanatic_authoritarian
			}
		}
	}

	# Prospector
	option = {
		name = lrsk_gov_var_impecon.2.d
		custom_tooltip = lrsk_gov_var_impecon.2.d.tooltip
		
		hidden_effect = {
			event_target:lrsk_impecon_colonized = {
				set_subject_of = {
					who = event_target:lrsk_impecon_colonizer
					preset = preset_lrsk_gvp_vassal_prospector
				}
				set_country_flag = lrsk_gvp_impecon_specsub_of@root
				set_country_flag = lrsk_gvp_impecon_raressub_of@root
			}
			log = "[lrsk_impecon_colonized.GetName] set to Prospecting Colony under [lrsk_impecon_colonizer.GetName]"
		}
		
		ai_chance = {
			factor = 10 # dunno
			modifier = {
				factor = 2
				has_ethic = ethic_materialist
			}
			modifier = {
				factor = 3
				has_ethic = ethic_fanatic_materialist
			}
		}
	}

	# Nothing
	option = {
		name = lrsk_gov_var_impecon.2.e
		custom_tooltip = lrsk_gov_var_impecon.2.e.tooltip
		
		log = "[lrsk_impecon_colonized.GetName] retains previous subject status under [lrsk_impecon_colonizer.GetName]"

		set_timed_country_flag = {
			flag = lrsk_impecon_temp_no_change
			days = 2
		}
		
		#hidden_effect = {	
		#	country_event = { id = lrsk_gov_var_impecon.3 }
		#}
		
		ai_chance = {
			factor = 1 # dunno
		}
	}

	after = {
		# call event to recalc variable variables if needed
		if = { limit = { NOT = { has_country_flag = lrsk_impecon_temp_no_change } } country_event = { id = lrsk_gov_var_impecon.3 } }
	}
}

# Recalculates the "legitimacy" variable for imperial economy's stability modifier from having these vassals
# Applies all relevant modifiers or removes them as needed
country_event = {
	id = lrsk_gov_var_impecon.3

  	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_valid_civic = lrsk_gov_var_civic_imperial_economy	# JIC
	}
	
	immediate = {
		# Reset to recalc
		set_variable = { which = lrsk_impecon_legit value = 0 }
		set_variable = { which = lrsk_impecon_foundries value = 0 }
		set_variable = { which = lrsk_impecon_markets value = 0 }
		set_variable = { which = lrsk_impecon_trophies value = 0 }
		set_variable = { which = lrsk_impecon_prospectors value = 0 }
		
		# Count all special subjects, including how many of each type
		every_subject = { limit = { lrsk_is_impecon_vassal = yes }
			prev = { change_variable = { which = lrsk_impecon_legit value = 1 } }
			
			if = { limit = { is_subject_with_preset = { PRESET = preset_lrsk_gvp_vassal_foundry } }
				prev = { change_variable = { which = lrsk_impecon_foundries value = 1 } }
			}
			else_if = { limit = { is_subject_with_preset = { PRESET = preset_lrsk_gvp_vassal_market } }
				prev = { change_variable = { which = lrsk_impecon_markets value = 1 } }
			}
			else_if = { limit = { is_subject_with_preset = { PRESET = preset_lrsk_gvp_vassal_trophy } }
				prev = { change_variable = { which = lrsk_impecon_trophies value = 1 } }

				# Need to apply the shame modifier to trophy vassals (should already be there in most cases, but...)
				if = { limit = { NOT = { has_modifier = lrsk_gov_var_empire_impecon_trophy_vs } }
					add_modifier = { modifier = lrsk_gov_var_empire_impecon_trophy_vs }
				}
			}
			else_if = { limit = { is_subject_with_preset = { PRESET = preset_lrsk_gvp_vassal_prospector } }
				prev = { change_variable = { which = lrsk_impecon_prospectors value = 1 } }
			}
			else = {
				# Every applicable vassal in this conditional should have a special type
				log = "ERROR: Special vassal of Imperial Economy empires without special type? Name = [this.GetName], Overlord = [root.GetName]"
			}
		}

		# Max special subject bonus mult = 5
		if = { limit = { check_variable = { which = lrsk_impecon_foundries value > 5 } }
			set_variable = { which = lrsk_impecon_foundries value = 5 }
		}

		if = { limit = { check_variable = { which = lrsk_impecon_markets value > 5 } }
			set_variable = { which = lrsk_impecon_markets value = 5 }
		}

		if = { limit = { check_variable = { which = lrsk_impecon_trophies value > 5 } }
			set_variable = { which = lrsk_impecon_trophies value = 5 }
		}

		if = { limit = { check_variable = { which = lrsk_impecon_prospectors value > 5 } }
			set_variable = { which = lrsk_impecon_prospectors value = 5 }
		}

		# Remove any special subject bonus to re-apply with new mult if applicable		
		erase_modifier = { MOD = lrsk_gov_var_empire_impecon_foundry }
		if = { limit = { check_variable = { which = lrsk_impecon_foundries value > 0 } }
			add_modifier = {
				modifier = lrsk_gov_var_empire_impecon_foundry
				multiplier = lrsk_impecon_foundries
			}
		}

		erase_modifier = { MOD = lrsk_gov_var_empire_impecon_market }
		if = { limit = { check_variable = { which = lrsk_impecon_markets value > 0 } }
			add_modifier = {
				modifier = lrsk_gov_var_empire_impecon_market
				multiplier = lrsk_impecon_markets
			}
		}
		
		erase_modifier = { MOD = lrsk_gov_var_empire_impecon_trophy_ol }
		if = { limit = { check_variable = { which = lrsk_impecon_trophies value > 0 } }
			add_modifier = {
				modifier = lrsk_gov_var_empire_impecon_trophy_ol
				multiplier = lrsk_impecon_trophies
			}
		}

		erase_modifier = { MOD = lrsk_gov_var_empire_impecon_provision }		
		if = { limit = { check_variable = { which = lrsk_impecon_prospectors value > 0 } }
			add_modifier = {
				modifier = lrsk_gov_var_empire_impecon_provision
				multiplier = lrsk_impecon_prospectors
			}
		}

		# Finally, do legitimacy bonus
		erase_modifier = { MOD = lrsk_gov_var_empire_impecon_legit }
		if = { limit = { check_variable = { which = lrsk_impecon_legit value > 0 } }
			add_modifier = {
				modifier = lrsk_gov_var_empire_impecon_legit
				multiplier = lrsk_impecon_legit
			}
		}

		# This general check looks to see if we should remove the trophy happinness penalty from any freed trophy colony
		every_country = { limit = { has_country_flag = lrsk_gvp_impecon_trophysub_of@root }
			if = {
				limit = {
					NOT = { is_subject_with_preset = { PRESET = preset_lrsk_gvp_vassal_trophy } }
					has_modifier = lrsk_gov_var_empire_impecon_trophy_vs
				}
				remove_modifier = lrsk_gov_var_empire_impecon_trophy_vs
			}
		}
	}
}

# Explainer
country_event = {
	id = lrsk_gov_var_impecon.101
	title = lrsk_gov_var_impecon.101.name
	desc = lrsk_gov_var_impecon.101.desc
	picture = GFX_evt_alien_segregation

	is_triggered_only = yes

	trigger = {
		is_ai = no
		has_valid_civic = lrsk_gov_var_civic_imperial_economy
	}

	option = {
		name = lrsk_gov_var_impecon.101.a
	}
}