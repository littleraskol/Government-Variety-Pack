# Government Variety Pack
# Events - Uplift Origin
# Author: littleraskol

namespace = lrsk_gov_var_uplift

# Setup traits, etc.
country_event = {
	id = lrsk_gov_var_uplift.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_origin = lrsk_gov_var_origin_uplift
	}

	immediate = {
		set_country_flag = lrsk_gov_var_uplift_nation
		set_country_flag = first_contact_event
		set_country_flag = Story2 # Already encountered spacefarers

		# Swap traits out. We want the species to have the actual presapient traits for job weighting purposes.
		owner_species = { switch = {
			trigger = has_trait
			lrsk_gov_var_trait_starborn = {
				root = {
					every_owned_pop = {
						limit = { pop_has_trait = lrsk_gov_var_trait_starborn }
						modify_species = {
							species = this
							remove_trait = lrsk_gov_var_trait_starborn
							add_trait = trait_presapient_starborn
						}
						species = { save_event_target_as = lrsk_gov_var_new_uplift_species }
					}
				}
			}
			lrsk_gov_var_trait_earthbound = {
				root = {
					every_owned_pop = {
						limit = { pop_has_trait = lrsk_gov_var_trait_earthbound }
						modify_species = {
							species = this
							remove_trait = lrsk_gov_var_trait_earthbound
							add_trait = trait_presapient_earthbound
						}
						species = { save_event_target_as = lrsk_gov_var_new_uplift_species }
					}
				}
			}
			lrsk_gov_var_trait_natural_intellectuals = {
				root = {
					every_owned_pop = {
						limit = { pop_has_trait = lrsk_gov_var_trait_natural_intellectuals }
						modify_species = {
							species = this
							remove_trait = lrsk_gov_var_trait_natural_intellectuals
							add_trait = trait_presapient_natural_intellectuals
						}
						species = { save_event_target_as = lrsk_gov_var_new_uplift_species }
					}
				}
			}
			lrsk_gov_var_trait_proles = {
				root = {
					every_owned_pop = {
						limit = { pop_has_trait = lrsk_gov_var_trait_proles }
						modify_species = {
							species = this
							remove_trait = lrsk_gov_var_trait_proles
							add_trait = trait_presapient_proles
						}
						species = { save_event_target_as = lrsk_gov_var_new_uplift_species }
					}
				}
			}
			lrsk_gov_var_trait_conservative = {
				root = {
					every_owned_pop = {
						limit = { pop_has_trait = lrsk_gov_var_trait_conservative }
						modify_species = {
							species = this
							remove_trait = lrsk_gov_var_trait_conservative
							add_trait = trait_presapient_conservative
						}
						species = { save_event_target_as = lrsk_gov_var_new_uplift_species }
					}
				}
			}
			lrsk_gov_var_trait_enlightened = {
				root = {
					every_owned_pop = {
						limit = { pop_has_trait = lrsk_gov_var_trait_enlightened }
						modify_species = {
							species = this
							remove_trait = lrsk_gov_var_trait_enlightened
						}
						species = { save_event_target_as = lrsk_gov_var_new_uplift_species }
					}
					set_country_flag = lrsk_gov_var_uplift_enlighten
				}
			}
			default = { root = { set_country_flag = lrsk_gov_var_uplift_no_trait_swap } }
		} }
		
		IF = {
			limit = { OR = { 
				has_country_flag = lrsk_gov_var_uplift_enlighten
				has_country_flag = lrsk_gov_var_uplift_no_trait_swap
			} }
			add_modifier = { modifier = lrsk_gov_var_empire_enlightened }
		}
		
		IF = {
			limit = { NOT = { has_country_flag = lrsk_gov_var_uplift_no_trait_swap } }
			change_dominant_species = {
				species = event_target:lrsk_gov_var_new_uplift_species
				change_all = yes
			}
		}

		#Spawn tutor - not working like this, oh well...
		#this.capital_scope.solar_system = {
		#	random_system = {
		#		limit = {
		#			has_owner = no
		#			distance = {
		#				source = prev
		#				#min_jumps = 3
		#				#max_jumps = 5
		#				min_distance <= 200
		#			}
		#			NOT = { has_star_flag = empire_cluster }
		#		}
		#		spawn_system = { initializer = "lrsk_uplift_1" } 
		#	}
		#}
	}
}


# Tutor system ownership jank
#country_event = {
#	id = lrsk_gov_var_uplift.100
#	hide_window = yes
#	is_triggered_only = yes
#
#	immediate = {
#		every_planet_within_border = {
#			limit = {
#				has_deposit_for = shipclass_mining_station
#				has_mining_station = no
#			}
#			create_mining_station = {
#				owner = this
#			}
#		}
#		every_planet_within_border = {
#			limit = {
#				has_deposit_for = shipclass_research_station
#				has_research_station = no
#			}
#			create_research_station = {
#				owner = this
#			}
#		}
#	}
#}
#
#
#
#