# Government Variety Pack
# Events - For Discovery / Tradeways / Grand Alliance
# Author: littleraskol

namespace = lrsk_gov_var_new_fed_starts

# Sets up the research coop/trade league/martial alliance for the related origins.
country_event = {
	id = lrsk_gov_var_new_fed_starts.1
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			has_origin = lrsk_gov_var_origin_for_discovery
			has_origin = lrsk_gov_var_origin_for_discovery_mi
			has_origin = lrsk_gov_var_origin_tradeways
			has_origin = lrsk_gov_var_origin_tradeways_mc
			has_origin = lrsk_gov_var_origin_grand_alliance
			has_origin = lrsk_gvp_origin_convened_providence
		}
	}

	immediate = {
		set_country_flag = first_contact_event
		set_country_flag = Story2 # Already encountered spacefarers
		add_tradition = tr_diplomacy_adopt
		add_tradition = tr_diplomacy_the_federation

		if = {
			limit = { num_guaranteed_colonies >= 2 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_star_flag = neighbor_t1_first_colony }
						random_system_planet = {
							limit = { has_planet_flag = prescripted_ideal }
							change_pc = pc_barren
						}
						spawn_random_home_system = yes
						last_created_system = {
							lrsk_federation_origin_planet_setup = yes
							random_system_planet = {
								limit = { has_planet_flag = lrsk_fed_start_planet }
								save_event_target_as = lrsk_fed_planet_1
							}
						}
					}
					closest_system = {
						limit = { has_star_flag = neighbor_t2_second_colony }
						random_system_planet = {
							limit = { has_planet_flag = prescripted_ideal }
							change_pc = pc_barren
						}
						spawn_random_home_system = yes
						last_created_system = {
							lrsk_federation_origin_planet_setup = yes
							random_system_planet = {
								limit = { has_planet_flag = lrsk_fed_start_planet }
								save_event_target_as = lrsk_fed_planet_2
							}
						}
					}
				}
			}
		}
		if = {
			limit = { num_guaranteed_colonies = 1 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { has_star_flag = neighbor_t1_first_colony }
						random_system_planet = {
							limit = { has_planet_flag = prescripted_ideal }
							change_pc = pc_barren
						}
						spawn_random_home_system = yes
						last_created_system = {
							lrsk_federation_origin_planet_setup = yes
							random_system_planet = {
								limit = { has_planet_flag = lrsk_fed_start_planet }
								save_event_target_as = lrsk_fed_planet_1
							}
						}
					}
					closest_system = {
						limit = { 
							NOT = { has_star_flag = neighbor_t1_first_colony }
							lrsk_system_vacant = yes
						}
						spawn_random_home_system = yes
						last_created_system = {
							lrsk_federation_origin_planet_setup = yes
							random_system_planet = {
								limit = { has_planet_flag = lrsk_fed_start_planet }
								save_event_target_as = lrsk_fed_planet_2
							}
						}
					}
				}
			}
		}
		if = {
			limit = { num_guaranteed_colonies = 0 }
			capital_scope = {
				solar_system = {
					closest_system = {
						limit = { lrsk_system_vacant = yes }
						set_star_flag = lrsk_fed_origin_system_1
						spawn_random_home_system = yes
						last_created_system = {
							lrsk_federation_origin_planet_setup = yes
							random_system_planet = {
								limit = { has_planet_flag = lrsk_fed_start_planet }
								save_event_target_as = lrsk_fed_planet_1
							}
						}
					}
					closest_system = {
						limit = { 
							NOT = { has_star_flag = lrsk_fed_origin_system_1 }
							lrsk_system_vacant = yes
						}
						spawn_random_home_system = yes
						last_created_system = {
							lrsk_federation_origin_planet_setup = yes
							random_system_planet = {
								limit = { has_planet_flag = lrsk_fed_start_planet }
								save_event_target_as = lrsk_fed_planet_2
							}
						}
					}
				}
			}
		}

		# First Member
		event_target:lrsk_fed_planet_1 = {
			solar_system = { generate_home_system_resources = yes }

			# Selective Kinship will make partners of different species class problematic
			if = { limit = { root = { NOT = { has_valid_civic = civic_selective_kinship } } }
				lrsk_create_fed_planet_species = { CLASS = RANDOM }
			}
			else = {
				root = {
					switch = {
						trigger = is_species_class
						HUM =		{ lrsk_create_fed_planet_species = { CLASS = HUM } }
						MAM =		{ lrsk_create_fed_planet_species = { CLASS = MAM } }
						FUN =		{ lrsk_create_fed_planet_species = { CLASS = FUN } }
						AVI =		{ lrsk_create_fed_planet_species = { CLASS = AVI } }
						PLANT =		{ lrsk_create_fed_planet_species = { CLASS = PLANT } }
						ART =		{ lrsk_create_fed_planet_species = { CLASS = ART } }
						REP =		{ lrsk_create_fed_planet_species = { CLASS = REP } }
						MOL =		{ lrsk_create_fed_planet_species = { CLASS = MOL } }
						LITHOID =	{ lrsk_create_fed_planet_species = { CLASS = LITHOID } }
						NECROID =	{ lrsk_create_fed_planet_species = { CLASS = NECROID } }
						AQUATIC =	{ lrsk_create_fed_planet_species = { CLASS = AQUATIC } }
						TOX =		{ lrsk_create_fed_planet_species = { CLASS = TOX } }
						default =	{ lrsk_create_fed_planet_species = { CLASS = HUM } }
					}
				}
			}

			# For Discovery/Diplomatic Directive: Discover
			if = {
				limit = { root = { lrsk_gov_var_has_discovery_origin = yes } }
				random_list = {
					20 = {
						modifier = {
							factor = 2
							root = { has_origin = lrsk_gov_var_origin_for_discovery_mi }
						}
						modifier = {
							factor = 0
							root = { has_valid_civic = civic_selective_kinship }
						}
						lrsk_create_discovery_mi_member = yes
					}
					80 = {
						modifier = {
							factor = 0.75
							root = { has_origin = lrsk_gov_var_origin_for_discovery_mi }
						}
						lrsk_create_discovery_si_member = yes
					}
				}
			}
			# Tradeways/Tradeways, Inc.
			if = {
				limit = { root = { lrsk_gov_var_has_tradeways_origin = yes } }
				random_list = {
					30 = {
						lrsk_create_tradeways_member_mg = yes
					}
					70 = {
						modifier = {
							factor = 0
							root = { 
								OR = {
									has_valid_civic = civic_corporate_dominion
									has_auth_corporate = yes
								}
							}
						}	
						lrsk_create_tradeways_member_mc = yes
					}
				}
			}
			# Grand Alliance
			if = {
				limit = { root = { has_origin = lrsk_gov_var_origin_grand_alliance } }
				lrsk_create_grand_alliance_member = yes
			}
			# Convened by Providence
			if = {
				limit = { root = { has_origin = lrsk_gvp_origin_convened_providence } }
				lrsk_create_providence_member = yes
			}

			last_created_country = {
				# Check if we somehow got a corp partner for a corp player
				lrsk_federation_origin_megacorp_fix = yes
				
				# Replace with new preset country if somehow a Despicable Neutral
				IF = { limit = { has_ai_personality = personality_null }
					lrsk_fix_null_partner = { NUM = 1 }
				}
				ELSE = {			
					save_event_target_as = lrsk_fed_member_1
					establish_communications_no_message = root
				}
			}

			lrsk_federation_origin_final_steup = { NUM = 1 }
		}

		# Second Member
		event_target:lrsk_fed_planet_2 = {
			solar_system = { generate_home_system_resources = yes }

			# Selective Kinship will make partners of different species class problematic
			if = { limit = { root = { NOT = { has_valid_civic = civic_selective_kinship } } }
				lrsk_create_fed_planet_species = { CLASS = RANDOM }
			}
			else = {
				root = {
					switch = {
						trigger = is_species_class
						HUM =		{ lrsk_create_fed_planet_species = { CLASS = HUM } }
						MAM =		{ lrsk_create_fed_planet_species = { CLASS = MAM } }
						FUN =		{ lrsk_create_fed_planet_species = { CLASS = FUN } }
						AVI =		{ lrsk_create_fed_planet_species = { CLASS = AVI } }
						PLANT =		{ lrsk_create_fed_planet_species = { CLASS = PLANT } }
						ART =		{ lrsk_create_fed_planet_species = { CLASS = ART } }
						REP =		{ lrsk_create_fed_planet_species = { CLASS = REP } }
						MOL =		{ lrsk_create_fed_planet_species = { CLASS = MOL } }
						LITHOID =	{ lrsk_create_fed_planet_species = { CLASS = LITHOID } }
						NECROID =	{ lrsk_create_fed_planet_species = { CLASS = NECROID } }
						AQUATIC =	{ lrsk_create_fed_planet_species = { CLASS = AQUATIC } }
						TOX =		{ lrsk_create_fed_planet_species = { CLASS = TOX } }
						default =	{ lrsk_create_fed_planet_species = { CLASS = HUM } }
					}
				}
			}

			# For Discovery/Diplomatic Directive: Discover
			if = {
				limit = { root = { lrsk_gov_var_has_discovery_origin = yes } }
				random_list = {
					20 = {
						modifier = {
							factor = 0.5
							event_target:lrsk_fed_member_1 = { has_auth_machine = yes }
							root = { NOT = { has_origin = lrsk_gov_var_origin_for_discovery_mi } }
						}
						modifier = {
							factor = 0
							root = { has_valid_civic = civic_selective_kinship }
						}
						lrsk_create_discovery_mi_member = yes
					}
					80 = {
						modifier = {
							factor = 1.125
							event_target:lrsk_fed_member_1 = { has_auth_machine = yes }
							root = { NOT = { has_origin = lrsk_gov_var_origin_for_discovery_mi } }
						}
						lrsk_create_discovery_si_member = yes
					}
				}
			}
			# Tradeways/Tradeways, Inc.
			if = {
				limit = { root = { lrsk_gov_var_has_tradeways_origin = yes } }
				random_list = {
					40 = {
						modifier = {
							add = 50
							event_target:lrsk_fed_member_1 = { has_auth_corporate = yes }
						}		
						lrsk_create_tradeways_member_mg = yes
					}
					60 = {
						modifier = {
							add = -50
							event_target:lrsk_fed_member_1 = { has_auth_corporate = yes }
						}
						modifier = {
							factor = 0
							root = { 
								OR = {
									has_valid_civic = civic_corporate_dominion
									has_auth_corporate = yes
								}
							}
						}					
						lrsk_create_tradeways_member_mc = yes
					}
				}
			}
			# Grand Alliance
			if = {
				limit = { root = { has_origin = lrsk_gov_var_origin_grand_alliance } }
				lrsk_create_grand_alliance_member = yes
			}
			# Convened by Providence
			if = {
				limit = { root = { has_origin = lrsk_gvp_origin_convened_providence } }
				lrsk_create_providence_member = yes
			}

			last_created_country = {
				# Check if we somehow got a corp partner for a corp player
				lrsk_federation_origin_megacorp_fix = yes
				
				# Replace with new preset country if somehow a Despicable Neutral
				IF = { limit = { has_ai_personality = personality_null }
					lrsk_fix_null_partner = { NUM = 2 }
				}
				ELSE = {			
					save_event_target_as = lrsk_fed_member_2
					establish_communications_no_message = root
				}
			}

			lrsk_federation_origin_final_steup = { NUM = 2 }
		}
		
		event_target:lrsk_fed_member_1 = {
			create_starting_leaders = yes
			country_event = { id = game_start.9 }
			country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
			country_event = { id = origin.58 days = 1 } # delayed for federation assignment to settle
			join_alliance = { who = root override_requirements = yes }
			set_name = random # Fixes some naming issues
		}
		event_target:lrsk_fed_member_2 = {
			create_starting_leaders = yes
			country_event = { id = game_start.9 }
			country_event = { id = game_start.33 days = 1 } # needs delay for system ownership to settle
			country_event = { id = origin.58 days = 1 } # delayed for federation assignment to settle
			join_alliance = { who = root override_requirements = yes }
			set_name = random # Fixes some naming issues
		}
		if = {
			limit = { lrsk_gov_var_has_discovery_origin = yes }
			federation = { 
				set_federation_type = research_federation
				set_federation_leader = root
				set_name = random
			}
		}
		if = {
			limit = { lrsk_gov_var_has_tradeways_origin = yes }
			federation = { 
				set_federation_type = trade_federation
				set_federation_leader = root
				set_name = random
			}
		}
		if = {
			limit = { root = { has_origin = lrsk_gov_var_origin_grand_alliance } }
			federation = { 
				set_federation_type = military_federation
				set_federation_leader = root
				set_name = random
			}
		}
		if = {
			limit = { root = { has_origin = lrsk_gvp_origin_convened_providence } }
			federation = { 
				set_federation_type = spiritualist_federation
				set_federation_leader = root
				set_name = random
			}
		}
		event_target:lrsk_fed_member_1 = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_lrsk_gov_var_new_feds
			}
			add_trust = {
				amount = 25
				who = root
			}
			add_trust = {
				amount = 25
				who = event_target:lrsk_fed_member_2
			}
			add_intel = {
				amount = 60
				who = root
			}
			add_intel = {
				amount = 60
				who = event_target:lrsk_fed_member_2
			}
		}
		event_target:lrsk_fed_member_2 = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_lrsk_gov_var_new_feds
			}
			add_trust = {
				amount = 25
				who = root
			}
			add_trust = {
				amount = 25
				who = event_target:lrsk_fed_member_1
			}
			add_intel = {
				amount = 60
				who = root
			}
			add_intel = {
				amount = 60
				who = event_target:lrsk_fed_member_1
			}
		}
		add_opinion_modifier = {
			who = event_target:lrsk_fed_member_1
			modifier = opinion_lrsk_gov_var_new_feds
		}
		add_opinion_modifier = {
			who = event_target:lrsk_fed_member_2
			modifier = opinion_lrsk_gov_var_new_feds
		}
		add_trust = {
			amount = 25
			who = event_target:lrsk_fed_member_1
		}
		add_trust = {
			amount = 25
			who = event_target:lrsk_fed_member_2
		}
		add_intel = {
			amount = 60
			who = event_target:lrsk_fed_member_1
		}
		add_intel = {
			amount = 60
			who = event_target:lrsk_fed_member_2
		}
	}
}
