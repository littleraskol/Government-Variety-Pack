# New Advanced Civics
# Events - Techno-Barbarian
# Author: littleraskol

namespace = lrsk_adv_civ_techbarb

# Starting tech
country_event = {
	id = lrsk_adv_civ_techbarb.starttech
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = { limit = { has_valid_civic = lrsk_adv_civ_civic_technobarbarism }
			give_technology = { message = no tech = tech_lrsk_adv_civ_ancienttheory }
			give_technology = { message = no tech = tech_lrsk_adv_civ_ancientlearning }
			give_technology = { message = no tech = tech_lrsk_adv_civ_ancientcraft }
		}
	}
}

# Add Hidebound trait to scientists on spawn
country_event = {
	id = lrsk_adv_civ_techbarb.trait
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_civic = lrsk_adv_civ_civic_technobarbarism
		from = { leader_class = scientist }
	}

	immediate = {
		set_variable = { which = lrsk_tb_councilor_lvl value = 0 }
		set_variable = { which = lrsk_tb_councilor_lvl_pos_factor value = 0 }
		set_variable = { which = lrsk_tb_councilor_lvl_neg_factor value = 0 }
		IF = {
			limit = { has_councilor = { COUNCILOR = "lrsk_adv_civ_civic_technobarbarism_councilor" } }
			export_trigger_value_to_variable = {
				trigger = get_councilor_level
				parameters = {
					type = lrsk_adv_civ_civic_technobarbarism_councilor
				}
				variable = lrsk_tb_councilor_lvl
			}
			multiply_variable = { which = lrsk_tb_councilor_lvl value = 2 } #effect is Â±2%/lvl
			set_variable = { which = lrsk_tb_councilor_lvl_pos_factor value = lrsk_tb_councilor_lvl }
			multiply_variable = { which = lrsk_tb_councilor_lvl value = -1 } #negating for next
			set_variable = { which = lrsk_tb_councilor_lvl_neg_factor value = lrsk_tb_councilor_lvl }
		}
		random_list = {
			40 = {
				modifier = {
					add = 10
					has_policy_flag = lrsk_adv_civ_lapsed_rev
				}
				modifier = {
					add = 20
					has_policy_flag = lrsk_adv_civ_token_rev
				}
				modifier = {
					add = 30
					has_policy_flag = lrsk_adv_civ_no_rev
				}
				modifier = {
					add = lrsk_tb_councilor_lvl_pos_factor
					has_councilor = { COUNCILOR = "lrsk_adv_civ_civic_technobarbarism_councilor" }
				}
				# Nothing
			} 
			60 = {
				modifier = {
					add = -10
					has_policy_flag = lrsk_adv_civ_lapsed_rev
				}
				modifier = {
					add = -20
					has_policy_flag = lrsk_adv_civ_token_rev
				}
				modifier = {
					add = -30
					has_policy_flag = lrsk_adv_civ_no_rev
				}
				modifier = {
					add = lrsk_tb_councilor_lvl_neg_factor
					has_councilor = { COUNCILOR = "lrsk_adv_civ_civic_technobarbarism_councilor" }
				}
				from = { add_trait = lrsk_gvp_leader_trait_hidebound }
			}
		}
	}
}

# Announcing when a TB faction is formed
pop_faction_event = {
	id = lrsk_adv_civ_techbarb.factionpopup
	title = factions.1.title
	desc = {
		trigger = {
			text = factions.1.desc.start
			text = newline
			success_text = {
				text = lrsk_gvp_techbarb_innovators_arise
				is_pop_faction_type = gvp_tb_innovator
			}
			success_text = {
				text = lrsk_gvp_techbarb_ritualists_arise
				is_pop_faction_type = gvp_tb_ritualist
			}
			success_text = {
				hidden:owner = { NOT = { has_country_flag = first_faction } }
				text = factions.1.desc.firstfinisher
			}
		}
	}
	picture = GFX_evt_galactic_senate
	show_sound = event_factions
	is_triggered_only = yes

	trigger = {
		NOT = {
			owner = {
				has_origin = origin_broken_shackles
			}
		}
	}

	option = {
		name = OK
		hidden_effect = {
			owner = {
				every_owned_planet = {
					every_owned_pop = {
						force_faction_evaluation = yes
					}
				}
				IF = { limit = { NOT = { has_country_flag = first_faction } }
					set_country_flag = first_faction
				}
				# call this one more time in case force_faction_evaluation gave pops to default factions
				country_event = { id = lrsk_adv_civ_techbarb.cleanupfactions }
			}
		}
	}
}

# Notification event - other empire shifts ethics
country_event = {
	id = lrsk_adv_civ_techbarb.ethicshift
	title = factions.2000.title
	location = event_target:TargetFaction.Owner.capital_scope
	desc = {
		trigger = {
			text = factions.2000.desc.start
			text = newline
			success_text = {
				text = factions.2000.desc.technologist
				event_target:TargetFaction = { is_pop_faction_type = gvp_tb_innovator }
				has_country_flag = lrsk_gvp_inno_mat_shift
			}
			success_text = {
				text = factions.2000.desc.progressive
				event_target:TargetFaction = { is_pop_faction_type = gvp_tb_innovator }
				has_country_flag = lrsk_gvp_inno_egal_shift
			}
			success_text = {
				text = factions.2000.desc.traditionalist
				event_target:TargetFaction = { is_pop_faction_type = gvp_tb_ritualist }
				has_country_flag = lrsk_gvp_rit_spi_shift
			}
			success_text = {
				text = factions.2000.desc.totalitarian
				event_target:TargetFaction = { is_pop_faction_type = gvp_tb_ritualist }
				has_country_flag = lrsk_gvp_rit_auth_shift
			}
		}
	}

	picture = GFX_evt_alien_propaganda
	show_sound = event_factions

	is_triggered_only = yes

	option = {
		name = OK
	}
}

# Periodic cleanup of vanilla materialist and spiritualist factions. 
# First event runs yearly, calls the second immediately and then 6 months later.
country_event = {
	id = lrsk_adv_civ_techbarb.factioncleanupscheduler
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_civic = lrsk_adv_civ_civic_technobarbarism
		has_country_flag = first_faction
		OR = {
			has_country_flag = lrsk_gvp_tb_innovators_arose
			has_country_flag = lrsk_gvp_tb_ritualists_arose
		}
	}

	immediate = {
		country_event = { id = lrsk_adv_civ_techbarb.cleanupfactions }
		country_event = { id = lrsk_adv_civ_techbarb.cleanupfactions days = 180 }
	}
}
country_event = {
	id = lrsk_adv_civ_techbarb.cleanupfactions
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		# these are evaluated by the scheduler
		#has_civic = lrsk_adv_civ_civic_technobarbarism
		#OR = {
		#	has_country_flag = lrsk_gvp_tb_innovators_arose
		#	has_country_flag = lrsk_gvp_tb_ritualists_arose
		#}
		OR = {
			AND = {
				has_faction = technologist
				has_faction = gvp_tb_innovator
			}
			AND = {
				has_faction = traditionalist
				has_faction = gvp_tb_ritualist
			}
		}
	}

	immediate = {
		IF = {
			limit = {
				has_faction = technologist
				has_faction = gvp_tb_innovator
			}
			lrsk_gvp_technologists_to_innovators = yes
		}
		IF = {
			limit = {
				has_faction = traditionalist
				has_faction = gvp_tb_ritualist
			}
			lrsk_gvp_traditionalists_to_ritualists = yes
		}
	}
}

# Sets up Ancient Tech deposit, gives random techs as needed for AT and TB (doubles up with both)
country_event = {
	id = lrsk_adv_civ_techbarb.randomtech
	hide_window = yes
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_origin = lrsk_adv_civ_origin_ancient_tech
			has_valid_civic = lrsk_adv_civ_civic_technobarbarism
		}
	}
	
	immediate = {
		IF = { limit = { has_origin = lrsk_adv_civ_origin_ancient_tech }
			capital_scope = {
				set_planet_flag = lrsk_gov_var_ancient_tech_capital

				add_deposit = d_lrsk_gov_var_collapsed_tech_ruins
			}
			# Semi-immediate check that some other mod did not remove the ruins
			country_event = {
				id = lrsk_government_variety_pack_backend.2
				days = 2
			}
			lrsk_gvp_give_random_techs = yes
		}				
		
		IF = { limit = { has_valid_civic = lrsk_adv_civ_civic_technobarbarism }
			lrsk_gvp_give_random_techs = yes
		}
	}
}