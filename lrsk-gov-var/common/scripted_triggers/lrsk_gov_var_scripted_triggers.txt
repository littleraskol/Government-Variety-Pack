# Government Variety Pack
# Scripted Triggers
# Author: littleraskol

lrsk_gov_var_has_discovery_origin = {
	or = { 
		has_origin = lrsk_gov_var_origin_for_discovery
		has_origin = lrsk_gov_var_origin_for_discovery_mi
	}
}

lrsk_gov_var_has_tradeways_origin = {
	or = { 
		has_origin = lrsk_gov_var_origin_tradeways
		has_origin = lrsk_gov_var_origin_tradeways_mc
	}
}

lrsk_gov_var_has_newfed_origin = {
	or = {
		lrsk_gov_var_has_discovery_origin = yes
		lrsk_gov_var_has_tradeways_origin = yes
		has_origin = lrsk_gov_var_origin_grand_alliance
	}
}

lrsk_gov_var_has_newfed_npc_origin = {
	or = { 
		has_origin = lrsk_gov_var_origin_for_discovery_npc
		has_origin = lrsk_gov_var_origin_for_discovery_mi_npc
		has_origin = lrsk_gov_var_origin_tradeways_npc
		has_origin = lrsk_gov_var_origin_tradeways_mc_npc
		has_origin = lrsk_gov_var_origin_grand_alliance_npc
	}
}

# These are all starting conditions that create close-by neighbors
lrsk_gvp_has_boxed_in_origin = {
	OR = {
		lrsk_gov_var_has_newfed_origin = yes
		lrsk_gov_var_has_newfed_npc_origin = yes
	}
}

# Deprecated in 3.0, don't feel like interrogating this fact much tbh
lrsk_complex_worker_job_check_trigger = {
	worker_job_check_trigger = yes
	hidden_trigger = {
		exists = owner
		OR = {
			NOT = { has_trait = trait_mechanical }
			owner = { has_technology = tech_droid_workers }
		}
	}
}

lrsk_gvp_planet_can_get_wild_cult = {
	OR = {
		NOT = { has_modifier = lrsk_gov_var_statmod_divine_right_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_children_of_heaven_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_holy_war_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_harmony_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_chosen_few_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_universal_family_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_doomsday_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_golden_age_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_wild_revelry_cult }
		NOT = { has_modifier = lrsk_gov_var_statmod_penance_and_redemption_cult }
	}	
}

lrsk_gvp_planet_has_no_wild_cult = {
	NOR = {
		has_modifier = lrsk_gov_var_statmod_divine_right_cult
		has_modifier = lrsk_gov_var_statmod_children_of_heaven_cult
		has_modifier = lrsk_gov_var_statmod_holy_war_cult
		has_modifier = lrsk_gov_var_statmod_harmony_cult
		has_modifier = lrsk_gov_var_statmod_chosen_few_cult
		has_modifier = lrsk_gov_var_statmod_universal_family_cult
		has_modifier = lrsk_gov_var_statmod_doomsday_cult
		has_modifier = lrsk_gov_var_statmod_golden_age_cult
		has_modifier = lrsk_gov_var_statmod_wild_revelry_cult
		has_modifier = lrsk_gov_var_statmod_penance_and_redemption_cult
	}
}

# Checks if a system is an "escape route," meaning it has neither:
# 1. An owner,
# 2. A current controller,
# 3. Any fleets present,
# 4. A flag marking it as another empire's escape route, nor
# 5. A flag marking it as owned.
lrsk_is_hyperlane_escape_route = {
	NOR = {
		has_owner = yes
		exists = space_owner
		has_presence = yes
		has_star_flag = lrsk_marked_escape_route
		has_star_flag = lrsk_marked_owned_system
	}
}

# A system has an escape route if it has at least one neighbor that is an escape route.
lrsk_has_hyperlane_escape_route = {
	any_neighbor_system = {
		lrsk_is_hyperlane_escape_route = yes		
	}
}

# A system can be an escape route for another if it is an escape route and has an escape route.
lrsk_can_be_my_hyperlane_escape_route = {
	lrsk_is_hyperlane_escape_route = yes
	lrsk_has_hyperlane_escape_route = yes
}

# The prerequisite conditions for a viceroly colony empire to spawn for Colonial Fiefs
lrsk_can_spawn_viceroyal_colony_vassal = {
	# Need the right civic
	has_valid_civic = lrsk_gov_var_civic_colonial_fiefs
	
	# This effect can only happen so often...
	not = { has_country_flag = lrsk_colfief_venture_cooldown }

	# Requires policies in effect.
	not = { has_policy_flag = lrsk_gvp_colfief_prohibited }

	# Pop that starts new empire must be free, not subject to purge, not "second class" species
	any_owned_pop = {
		is_enslaved = no
		is_being_purged = no
		not = { pop_has_trait = trait_syncretic_proles }
	}

	# Don't want to poach pops from planets with few pops
	any_owned_planet = {
		num_pops > 9
	}

	# This can happen in any unowned, empty system that root has surveyed with a planet that some species in root can settle.
	# Note: there is the edge case that only enslaved/being-purged pops have the needed habitability, in which case later effects will fail.
	any_system = {
		is_surveyed = {
			who = root
			status = no
		}
		distance_to_empire = {
			who = root
			distance = 8
		}
		has_owner = no
		has_presence = no
		root = {
			any_owned_pop_species = {
				not = { has_trait = trait_syncretic_proles }
				prevprev = {
					any_system_planet = {
						habitability = {
							who = prevprev
							value >= 0.4
						}
					}
				}
			}
		}
	}
}
